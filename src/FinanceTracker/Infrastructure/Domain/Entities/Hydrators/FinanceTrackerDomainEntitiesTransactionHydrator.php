<?php

namespace FinanceTracker\Infrastructure\Domain\Entities\Hydradors;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class FinanceTrackerDomainEntitiesTransactionHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['_transactionId']->setValue($document, $return);
            $hydratedData['_transactionId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['_description'])) {
            $value = $data['_description'];
            $return = (string) $value;
            $this->class->reflFields['_description']->setValue($document, $return);
            $hydratedData['_description'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['_amount'])) {
            $value = $data['_amount'];
            $return = (int) $value;
            $this->class->reflFields['_amount']->setValue($document, $return);
            $hydratedData['_amount'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['_date'])) {
            $value = $data['_date'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['_date']->setValue($document, clone $return);
            $hydratedData['_date'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['_tags']) ? $data['_tags'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['_tags']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['_tags']->setValue($document, $return);
        $hydratedData['_tags'] = $return;
        return $hydratedData;
    }
}